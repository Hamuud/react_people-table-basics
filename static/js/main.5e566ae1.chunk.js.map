{"version":3,"sources":["api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/Loader/Loader.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","components/HomePage/HomePage.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","name","slug","sex","className","classNames","to","PeopleTable","peoples","selectedSlug","isError","map","people","born","died","fatherName","motherName","isSelected","findMother","find","findFather","isMomExist","isFatherExist","Loader","PeoplePage","useState","setIsError","isLoad","setIsLoad","setPeople","useParams","useEffect","loadPeople","getPeopleFromServer","PageNavLink","text","isActive","Navbar","role","HomePage","PageNotFound","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5e566ae1.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <Link\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n      to={`/people/${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { PersonLink } from '../PersonLink';\nimport { Person } from '../../types';\n\ntype Props = {\n  peoples: Person[];\n  selectedSlug: string;\n  isError: boolean;\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  peoples,\n  selectedSlug,\n  isError,\n}) => {\n  if (!isError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peoples.map(people => {\n          const {\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n            slug,\n          } = people;\n          const isSelected = slug === selectedSlug;\n          const findMother = peoples.find(({ name }) => name === motherName);\n          const findFather = peoples.find(({ name }) => name === fatherName);\n          const isMomExist = motherName || '-';\n          const isFatherExist = fatherName || '-';\n\n          return (\n            <tr\n              key={slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': isSelected,\n              })}\n            >\n              <td>\n                <PersonLink person={people} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {findMother\n                  ? <PersonLink person={findMother} />\n                  : isMomExist}\n              </td>\n              <td>\n                {findFather\n                  ? <PersonLink person={findFather} />\n                  : isFatherExist}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../PeopleTable';\nimport { Loader } from '../Loader';\n\nexport const PeoplePage = () => {\n  const [isError, setIsError] = useState(true);\n  const [isLoad, setIsLoad] = useState(true);\n  const [people, setPeople] = useState<Person[]>([]);\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    const loadPeople = async () => {\n      try {\n        const getPeopleFromServer = await getPeople();\n\n        setPeople(getPeopleFromServer);\n      } catch (error) {\n        setIsError(false);\n      } finally {\n        setIsLoad(false);\n      }\n    };\n\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoad\n            ? <Loader />\n            : (\n              <PeopleTable\n                peoples={people}\n                selectedSlug={slug}\n                isError={isError}\n              />\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames({\n      'has-background-grey-lighter': isActive,\n    })}\n    to={`${to}`}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './components/HomePage';\nimport { PageNotFound } from './components/PageNotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            <Routes>\n              <Route path=\"/\" element={<HomePage />} />\n              <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n              <Route path=\"/people\">\n                <Route index element={<PeoplePage />} />\n                <Route path=\":slug\" element={<PeoplePage />} />\n              </Route>\n              <Route path=\"*\" element={<PageNotFound />} />\n            </Routes>\n          </div>\n        </div>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}